/* ===== Base hero container ===== */
.hero {
  position: relative;
  display: grid;         /* lets you center text later if needed */
  overflow: hidden;      /* crop any overflow from the image */
  padding: 0;
  color: #fff;

  /* Desktop/tablet default: full width, cap the height at 600px.
     The clamp keeps it responsive but never taller than 600px. */
  height: clamp(380px, 60vh, 650px);
}

/* Absolute media layer (doesn’t push content) */
.hero-media {
  position: absolute;
  inset: 0;
  z-index: 0;
}

/* Image wrapper: crops the image */
.hero-image {
  position: absolute;
  inset: 0;
  overflow: hidden;
}

/* ===== Image positioning (unified approach) =====
   We always center the image with top/left 50% and translate.
   Then we switch scale mode per breakpoint: 
   - Desktop: width:100% (crop vertically)
   - Mobile:  height:100% (crop horizontally) 
*/
.hero-image-img {
  position: absolute;
  top: 50%;
  left: 50%;
  will-change: transform;

  /* Desktop scale mode (crop vertically, keep full width) */
  width: 100%;
  height: auto;

  /* Center the image by default */
  transform: translate(-50%, -50%);
}

.hero-overlay {
  position: relative;
  inset: 0;
  height: 100%;
}

.hero-content {
  position: relative;
  z-index: 1;           
  align-self: end;        
  max-width: 70rem;
  margin-inline: auto;
  text-align: center;
  display: flex;
  flex-direction: column; 
  gap: 2rem; 
  margin-bottom: 5% !important;
}

.hero-content h1 {
    font-size: clamp(2rem, 4.2vw, 2.4rem);
    line-height: 1.1;
    letter-spacing: -0.01em;
    margin: 0 0 0.5rem 0;
    text-shadow: 0 2px 16px rgba(0,0,0,.35);
}

.hero-content .sub {
    font-size: clamp(1.4rem, 2.4vw, 2.2rem);
    margin: 0;
}

.hero-content .hero-cta .btn {
    background-color: var(--brand-white);
    opacity: 0.8;
    color: var(--brand-primary);
    border: none;
}

.hero.product {
  height: auto;
  display: flex;
  flex-direction: column-reverse;

}

.hero.product .hero-media {
  position: unset;
}

.hero.product .hero-media .hero-image {
  position: unset;
  transform: none;
}

.hero.product .hero-media .hero-image img {
  border-radius: 10px;
  position: unset;
  transform: none;
}

.hero.product .hero-content {
  display: grid;
  grid-template-columns: 2fr 3fr;
  flex-direction: row;
  text-align: left;
  margin: 0 !important;
  gap: 1rem;  
}

.hero.product .hero-content h1 {
  font-size: clamp(2rem, 4.2vw, 3.2rem);
  line-height: 1.1;
  letter-spacing: -0.01em;
  margin: 0 0 0.5rem 0;
  color: black;
  text-shadow: none;
  min-width: 40%;
}

.hero.product .hero-content .sub {
  color: black;
  font-size: clamp(1.2rem, 2.4vw, 1.6rem);
  margin: 0 0 0 2rem;
  text-align: right;
} 

/* .hero.product .hero-media .hero-image img {
  object-position: unset;
  min-height: 550px;
}

/* ===== Desktop / large screens ===== */
@media (min-width: 851px) {
  .hero {
    /* Full width, max-height ~600px already handled by clamp above */
  }

  .hero-image-img {
    /* Center composition on desktop. You can tweak if needed. */
    transform: translate(-50%, -50%);
  }
}

/* ===== Mobile / up to 850px ===== */
@media (max-width: 850px) {
  .hero.product {
    /* Full width, max-height = 70vh as requested */
    height: auto;
    max-height: 75vh;
  }

  .hero-image-img {
    /* Switch scale mode: fill height, crop horizontally */
    width: auto;
    height: 100%;

    /* FOCAL-POINT CONTROL
       --focal-x is the horizontal percentage of the image width
       you want centered in the viewport (e.g., 60%).
       We translate the image left by that same percentage of its own width,
       aligning that vertical axis with the container center. */
    --focal-x: 55%;

    /* translateX uses the image’s own width as reference, so this is stable
       across all viewport widths. */
    transform: translate(calc(-1 * var(--focal-x)), -50%);
  }

  .hero.product .hero-image-img {
    width: 100%;
    height: auto;
  }

  .hero.product .hero-content {
    /* grid-template-columns: none;
    grid-template-rows: 2fr 5fr; */
    display: flex;
    flex-direction: column;
  }

  .hero.product .hero-content .sub {
    margin: 0;
    text-align: left;
  }
}

@media (min-width: 1300px) {
  .hero {
    /* Full width, max-height = 70vh as requested */
    height: clamp(600px, 65vh, 800px);
  }
}
